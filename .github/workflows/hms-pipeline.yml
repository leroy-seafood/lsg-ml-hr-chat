name: Chat Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ github.event_name == 'release' && github.event.action == 'published' && 'prod' || 'test' }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:
      id-token: write 
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip


      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Generate App Settings
        id: generate_settings
        run: |
          content=$(cat config.json)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=settings::$content"

      - name: Set Startup Command (HR)
        run: |
          az webapp config set --name ${{ vars.HR_WEBAPP_NAME }} --resource-group ${{ vars.HR_RESOURCE_GROUP }} --startup-file "python3 -m gunicorn app:app"

      - name: Deploy to Azure Web App (HR)
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp-hr
        with:
          app-name: ${{ vars.HR_WEBAPP_NAME }}
          resource-group-name: ${{ vars.HR_RESOURCE_GROUP }}

      - name: Set App Settings (HR)
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ vars.HR_WEBAPP_NAME }}
          app-settings-json: ${{ steps.generate_settings.outputs.settings }}

# # HMS Pipeline

      - name: Set Startup Command (HMS)
        run: |
          az webapp config set --name ${{ vars.HMS_WEBAPP_NAME }} --resource-group ${{ vars.HMS_RESOURCE_GROUP }} --startup-file "python3 -m gunicorn app:app"
          
  
      - name: Deploy to Azure Web App (HMS)
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp-hms
        with:
          app-name: ${{ vars.HMS_WEBAPP_NAME }}
          resource-group-name: ${{ vars.HMS_RESOURCE_GROUP }}

      - name: Set App Settings (HMS)
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ vars.HMS_WEBAPP_NAME }}
          app-settings-json: '[
            {
              "name": "DEBUG",
              "value": "True"
            },
            {
              "name": "AZURE_OPENAI_TEMPERATURE",
              "value": "0"
            },
            {
              "name": "AZURE_OPENAI_TOP_P",
              "value": "0"
            }
              ,
            {
              "name": "AZURE_OPENAI_MAX_TOKENS",
              "value": "800"
            },
            {
              "name": "AZURE_OPENAI_PREVIEW_API_VERSION",
              "value": "2024-05-01-preview"
            },
            {
              "name": "AZURE_OPENAI_STREAM",
              "value": "True"
            },
            {
              "name": "AZURE_COSMOSDB_DATABASE",
              "value": "db_conversation_history"
            },
            {
              "name": "AZURE_COSMOSDB_CONVERSATIONS_CONTAINER",
              "value": "conversations"
            },
            {
              "name": "DATASOURCE_TYPE",
              "value": "AzureCognitiveSearch"
            },
            {
              "name": "SEARCH_TOP_K",
              "value": "5"
            },
            {
              "name": "SEARCH_STRICTNESS",
              "value": "3"
            },
            {
              "name": "SEARCH_ENABLE_IN_DOMAIN",
              "value": "True"
            },
            {
              "name": "AZURE_SEARCH_USE_SEMANTIC_SEARCH",
              "value": "True"
            },
            {
              "name": "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG",
              "value": "my-semantic-config"
            },
            {
              "name": "AZURE_SEARCH_INDEX_IS_PRECHUNKED",
              "value": "True"
            },
            {
              "name": "AZURE_SEARCH_TOP_K",
              "value": "5"
            },
            {
              "name": "AZURE_SEARCH_ENABLE_IN_DOMAIN",
              "value": "True"
            },
            {
              "name": "AZURE_SEARCH_CONTENT_COLUMNS",
              "value": "chunk"
            },
            {
              "name": "AZURE_SEARCH_FILENAME_COLUMN",
              "value": "chunk_id"
            },
            {
              "name": "AZURE_SEARCH_TITLE_COLUMN",
              "value": "title"
            },
            {
              "name": "AZURE_SEARCH_VECTOR_COLUMNS",
              "value": "vector"
            },
            {
              "name": "AZURE_SEARCH_QUERY_TYPE",
              "value": "vectorSemanticHybrid"
            },
            {
              "name": "AZURE_SEARCH_STRICTNESS",
              "value": "3"
            },
            {
              "name": "ELASTICSEARCH_TOP_K",
              "value": "5"
            },
            {
              "name": "ELASTICSEARCH_ENABLE_IN_DOMAIN",
              "value": "True"
            },
            {
              "name": "ELASTICSEARCH_STRICTNESS",
              "value": "3"
            },
            {
              "name": "USE_PROMPTFLOW",
              "value": "False"
            },
            {
              "name": "PROMPTFLOW_RESPONSE_TIMEOUT",
              "value": "120"
            },
            {
              "name": "PROMPTFLOW_REQUEST_FIELD_NAME",
              "value": "question"
            },
            {
              "name": "PROMPTFLOW_RESPONSE_FIELD_NAME",
              "value": "answer"
            },
            {
              "name": "AZURE_OPENAI_MODEL",
              "value": "${{ vars.AZURE_OPENAI_MODEL }}"
            },
            {
              "name": "AZURE_OPENAI_MODEL_NAME",
              "value": "${{ vars.AZURE_OPENAI_MODEL }}"
            },
            {
              "name": "AZURE_OPENAI_RESOURCE",
              "value": "${{ vars.AZURE_OPENAI_RESOURCE }}"
            },
            {
            "name": "AZURE_OPENAI_ENDPOINT",
            "value": "${{ vars.AZURE_OPENAI_ENDPOINT }}"
            },
            {
            "name": "AZURE_OPENAI_EMBEDDING_NAME",
            "value": "${{ vars.AZURE_OPENAI_EMBEDDING_NAME }}"
            },
            {
            "name": "AZURE_OPENAI_EMBEDDING_ENDPOINT",
            "value": "${{ vars.AZURE_OPENAI_ENDPOINT }}"
            },
            {
            "name": "AZURE_OPENAI_EMBEDDING_KEY",
            "value": "${{ secrets.AZURE_OPENAI_KEY }}"
            },
            {
            "name": "AZURE_SEARCH_SERVICE",
            "value": "${{ vars.AZURE_SEARCH_SERVICE }}"
            },
            {
            "name": "AZURE_OPENAI_SYSTEM_MESSAGE",
            "value": "${{ vars.AZURE_OPENAI_SYSTEM_MESSAGE }}"
            },
            {
            "name": "AZURE_SEARCH_SERVICE_ENDPOINT",
            "value": "https://${{ vars.AZURE_SEARCH_SERVICE }}.search.windows.net"
            },
            {
            "name": "AZURE_SEARCH_INDEX",
            "value": "${{ vars.AZURE_SEARCH_INDEX }}"
            },
            {
            "name": "AZURE_SEARCH_KEY",
            "value": "${{ secrets.AZURE_SEARCH_KEY }}"
            },
            {
            "name": "AZURE_OPENAI_KEY",
            "value": "${{ secrets.AZURE_OPENAI_KEY }}"
            }
          ]'


